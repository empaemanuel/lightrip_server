package org.group72.server.controller;

import org.group72.server.dao.UserRepository;
import org.group72.server.model.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

/**
 * This class defines the API for handling CRUD requests
 * of Users.
 * todo implement some security check.
 * todo implement adding users by token.
 */
@Controller
@RequestMapping(path="/user")
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody
    Integer addNewUser (@RequestParam String name, @RequestParam String email ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return n.getId();
    }
    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/specified")
    public @ResponseBody User getUser(@RequestParam Integer id){
        if(userRepository.findById(id).isPresent()) {
            return userRepository.findById(id).get();
        }
        return null;
    }

    @DeleteMapping(path="/delete")
    public @ResponseBody String deleteUser(@RequestParam Integer id){
        User n = new User();
        n.setId(id);
        userRepository.delete(n);
        return "Deleted";
    }





}